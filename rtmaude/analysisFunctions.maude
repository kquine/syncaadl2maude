
--- Adds full path names and convenient functions
--- to easily define search commands in a user-friendly way:

(tomod SEARCH-FUNCTIONS is
  pr SYNCHRONOUS-STEP .

  var PN : PathName .
  vars SYSTEM REST REST2 PORTS : Configuration .
  var IVAR : IntVarId .
  var BVAR : BoolVarId .
  var O : Oid .
  var LOC : Location .
  var LDS : LocationDeclSet .
  var VAL : Valuation .
  var TRANSES : TransitionSet .
  var I : Int .
  var B : Bool .
  var P : PortId .
  var MC : MsgContent .

  --- global path names:
  sort PathName .
  subsort Oid < PathName .
  op _->_ : PathName PathName -> PathName [ctor assoc] .

  --- locations of components:
  op location`of`component_in_ : PathName Configuration ~> Location .
  --- and why not:
  op location`of`component_in_ : PathName GlobalSystem ~> Location .
  eq location of component PN in {SYSTEM} = location of component PN in SYSTEM .

  --- values of local transition system variables and port variables:
  op value`of_in`component_in_ : IntVarId PathName Configuration ~> Int .
  op value`of_in`component_in_ : BoolVarId PathName Configuration ~> Bool .
  --- and for global systems:
  op value`of_in`component_in_ : IntVarId PathName GlobalSystem ~> Int .
  op value`of_in`component_in_ : BoolVarId PathName GlobalSystem ~> Bool .
  eq value of IVAR in component PN in {SYSTEM} = 
       value of IVAR in component PN in SYSTEM .  
  eq value of BVAR in component PN in {SYSTEM} = 
       value of BVAR in component PN in SYSTEM .  

  *** Notice that the following returns a MsgContent, not an Int or a Bool!
  op value`of`port_in`component_in_ : PortId PathName GlobalSystem ~> MsgContent .
  op value`of`port_in`component_in_ : PortId PathName Configuration ~> MsgContent .
  eq value of port P in component PN in {SYSTEM} = value of port P in component PN in SYSTEM .  

  eq location of component O in (< O : Thread | currState : LOC > REST) 
   = LOC .

  eq location of component (O -> PN) in (< O : Component | subcomponents : REST2 > REST) =
     location of component PN in REST2 .

  
  eq value of IVAR in component O in (< O : Thread | variables : (IVAR |-> I) VAL >  REST) 
    = I .

  eq value of IVAR in component (O -> PN) in
       (< O : Component | subcomponents : REST2 > REST)
    = value of IVAR in component PN in REST2 .  

  eq value of BVAR in component O in 
       (< O : Thread | variables : (BVAR |-> B) VAL >  REST) 
    = B .
  
  eq value of BVAR in component (O -> PN) in
       (< O : Component | subcomponents : REST2 > REST)
    = value of BVAR in component PN in REST2 .  

  eq value of port P in component O in 
       (< O : Thread | features : < P : Port | content : MC > PORTS >  REST) 
    = MC .

  eq value of port P  in component (O -> PN) in
       (< O : Component | subcomponents : REST2 > REST)
    = value of port P in component PN in REST2 .  

endtom)

--- Adds some standard atomic propositions to make
--- LTL model checking possibl without knowing the
--- Real-Time Maude representation of an AADL model.

(tomod LTL-MODEL-CHECK-AADL is 
  inc SEARCH-FUNCTIONS .
  inc TIMED-MODEL-CHECKER .

  op value`of_in`component_is_ : BoolVarId PathName Bool -> Prop [ctor] .
  op value`of_in`component_is_ : IntVarId PathName Int -> Prop [ctor] .
  op value`of_in`component_is_ : PortId PathName Int -> Prop [ctor] .
  op value`of_in`component_is_ : PortId PathName Bool -> Prop [ctor] .
  op _@_ : PathName Location -> Prop .

  var SYSTEM : Configuration .
  var BVAR : BoolVarId .
  var B : Bool .
  var IVAR : IntVarId .
  var I : Int .
  var L : Location .
  var PN : PathName .
  var P : PortId .

  eq {SYSTEM} |= value of BVAR in component PN is B =
        (B == value of BVAR in component PN in SYSTEM) .

  eq {SYSTEM} |= value of IVAR in component PN is I =
        (I == value of IVAR in component PN in SYSTEM) .

  eq {SYSTEM} |= PN @ L =
        (L == location of component PN in SYSTEM) .

  eq {SYSTEM} |= value of P in component PN is I =
        (data(I) == value of port P in component PN in SYSTEM) .

  eq {SYSTEM} |= value of P in component PN is B =
        (data(B) == value of port P in component PN in SYSTEM) .
endtom)
