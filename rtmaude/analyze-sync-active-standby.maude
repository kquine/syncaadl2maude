load synch-aadl-interpreter.rtmaude


--- search functions + convenient parametrized atomic propositions
in analysisFunctions    

(tomod AADL is
  inc SYNCHRONOUS-STEP .
  inc LTL-MODEL-CHECK-AADL .
endtom)

--- generated files
load model.maude

(set tick det .)

eof 

--- TESTS:

(red {initial} .)

(red period(initial) .)  *** OK 

(red allEnvAssignments(initial) .)
(red containsEnvironment(initial) .)
(red getEnvironment(initial) .)
(tfrew {initial} in time <= 200 .)


set verbose on .

(tsearch [1] 
  {initial} 
  =>*  GS:GlobalSystem 
  such that 
    (value of mS in component (MAIN -> env -> envProcess -> envThread) in GS:GlobalSystem) 
  in time <= 8 .)


(utsearch [1] 
  {initial}
   =>*  GS:GlobalSystem
   such that 
     (value of mS in component (MAIN -> env -> envProcess -> envThread)
      in GS:GlobalSystem) 
     and not (value of s1FA in component (MAIN -> env -> envProcess -> envThread)
      in GS:GlobalSystem) 
     and not (value of s2FA in component (MAIN -> env -> envProcess -> envThread)
      in GS:GlobalSystem) 
     and (value of s2F in component (MAIN -> env -> envProcess -> envThread)
      in GS:GlobalSystem) 
     and (value of s1F in component (MAIN -> env -> envProcess -> envThread)
      in GS:GlobalSystem) .)

