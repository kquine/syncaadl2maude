
(omod SIMPLE-COUNTEREXAMPLE is 
  including LTL-MODEL-CHECK-AADL .

  sorts CounterExampleItem CounterExampleItemSet .
  subsort CounterExampleItem < CounterExampleItemSet .
  op none : -> CounterExampleItemSet .
  op __ : CounterExampleItemSet CounterExampleItemSet -> CounterExampleItemSet
				    [ctor comm assoc id: none format(d ni d)] .

  op _->`[_`] : ComponentId CounterExampleItemSet -> CounterExampleItem 
		[ctor format(r o d n++i d n--i)] .
  op variables : Valuation -> CounterExampleItem [ctor] .


  subsort CounterExampleItem < State .


  var C : ComponentId . 
  vars OBJECT SYSTEM : Object .
  vars REST COMPONENTS : Configuration . 
  var VAL : Valuation .
  
--- simplify

  op simplify : Configuration -> CounterExampleItemSet .

  eq simplify(OBJECT COMPONENTS) = simplify(OBJECT) simplify(COMPONENTS) .
  eq simplify(none) = none .

  eq simplify(< C : Component | >)
   = C ->[ simplify-sub(< C : Component | >)
           simplify-thread(< C : Component | >) ] .

--- simplify cases
   
  op simplify-sub : Object -> CounterExampleItemSet .
  eq simplify-sub(< C : Component | subcomponents : COMPONENTS >) 
   = simplify(COMPONENTS) .

  op simplify-thread : Object -> CounterExampleItem .
  eq simplify-thread(< C : Thread | variables : VAL >)
   = variables(VAL) .
  eq simplify-thread(OBJECT) = none [owise] .


--- simplify transition
  eq {{SYSTEM},R:RuleName}
   = {simplify(SYSTEM),R:RuleName} .

endom)

